version: "3.8"

services:
  task-service:
    build:
      context: ./task-service
    container_name: task-service
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - kafka-service
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=p_sql_db
      - DB_DATABASE_USER=postgres
      - DB_PASSWORD=mysecretpassword
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEXT_PUBLIC_TASK_SERVICE_URL=http://frontend:5000
  redis-service:
    build:
      context: ./redis-service
    container_name: redis-service
    ports:
      - "3002:3002"
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
  kafka-service:
    build:
      context: ./kafka-service
    container_name: kafka-service
    ports:
      - "3001:3001"
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKER=kafka:9092
      - REDIS_URL=redis://redis:6379
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_DB=p_sql_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
    ports:
      - "5432:5432"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  frontend:
    build:
      context: ./client
    container_name: client
    ports:
      - "5000:5000"
    depends_on:
      - task-service
    environment:
      - NEXT_PUBLIC_TASK_SERVICE_URL=http://task-service:3000